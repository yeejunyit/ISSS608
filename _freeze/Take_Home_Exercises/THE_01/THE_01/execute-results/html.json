{
  "hash": "0dfb39e2ec0ad18ff345d1974519e213",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 01: Insights in Shippinh Data\"\nauthor: \"Yee Jun Yit\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n\n## Overview\n\nThe maritime sector a critical component of global trade, contributing significantly to increasing standards of living around the world, and requiring sustainability in this changing economic climate. Understanding ship performance, fuel efficiency, and operational cost factors are essential for improving decision-making and minimizing environmental impact.\n\n\n\n## Loading Data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse)\n```\n:::\n\n\n\n\n\nWe will be using the Ship Performance Dataset, which is synthetic data generated to realistically represent key operational metrics and attributes of different ship types in the Gulf of Guinea in Africa. This will enable us to perform maritime data analytics for clustering, prediction, and optimization of the industry.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_performance <- read_csv(\"data/Ship_Performance_Dataset.csv\")\n```\n:::\n\n\n\nThe dataset consists of 2736 rows and 18 columns, with features split into numerical and categorical types.\n\nThe numerical features consist of the following:\n\n-  *Speed_Over_Ground_knots*: Average speed of the ship over water (in knots).\n-  *Engine_Power_kW*: Engine power output (in kilowatts).\n-  *Distance_Traveled_nm*: Total distance traveled by the ship (in nautical miles).\n-  *Operational_Cost_USD*: Total operational cost per voyage (in USD).\n-  *Revenue_per_Voyage_USD*: Revenue generated per voyage (in USD).\n-  *Efficiency_nm_per_kWh*: Energy efficiency calculated in nautical miles per kilowatt-hour.\n\nThe categorical features are the following:\n\n-  *Ship_Type*: Type of ship (e.g., Tanker, Container Ship, Fish Carrier, Bulk Carrier).\n-  *Route_Type*: Shipping route type (e.g., Short-haul, Long-haul, Transoceanic).\n-  *Engine_Type*: Type of engine (e.g., Diesel, Heavy Fuel Oil).\n-  *Maintenance_Status*: Maintenance condition of the ship (e.g., Fair, Critical, Good).\n-  *Weather_Condition*: Prevailing weather conditions during voyages (e.g., Calm, Moderate, Rough).\n\n## EDA and Visualisations\n\nWe first perform some exploratory data analysis to better understand what we are working with.\n\n### View the first few rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ship_performance)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 18\n  Date       Ship_Type      Route_Type   Engine_Type          Maintenance_Status\n  <date>     <chr>          <chr>        <chr>                <chr>             \n1 2023-06-04 Container Ship None         Heavy Fuel Oil (HFO) Critical          \n2 2023-06-11 Fish Carrier   Short-haul   Steam Turbine        Good              \n3 2023-06-18 Container Ship Long-haul    Diesel               Fair              \n4 2023-06-25 Bulk Carrier   Transoceanic Steam Turbine        Fair              \n5 2023-07-02 Fish Carrier   Transoceanic Diesel               Fair              \n6 2023-07-09 Fish Carrier   Long-haul    Heavy Fuel Oil (HFO) Fair              \n# ℹ 13 more variables: Speed_Over_Ground_knots <dbl>, Engine_Power_kW <dbl>,\n#   Distance_Traveled_nm <dbl>, Draft_meters <dbl>, Weather_Condition <chr>,\n#   Cargo_Weight_tons <dbl>, Operational_Cost_USD <dbl>,\n#   Revenue_per_Voyage_USD <dbl>, Turnaround_Time_hours <dbl>,\n#   Efficiency_nm_per_kWh <dbl>, Seasonal_Impact_Score <dbl>,\n#   Weekly_Voyage_Count <dbl>, Average_Load_Percentage <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n### Check for missing values\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(ship_performance))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Date               Ship_Type              Route_Type \n                      0                       0                       0 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                      0                       0                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                      0                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n```\n\n\n:::\n:::\n\n\n\nAccording to the above code chunk, all the columns have 0 missing values, but visual inspection of the first 5 rows reveal the existence of missing-like values such as \"None\". This suggests that those missing values are not being recognized as NA.\n\nWe will change the  missing values in categorical columns to NA and drop any rows with missing values.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_performance <- ship_performance %>%\n  mutate(across(where(is.character), ~na_if(.x, \"None\")))\n\ncolSums(is.na(ship_performance))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Date               Ship_Type              Route_Type \n                      0                     136                     136 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                    136                     136                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                    136                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n```\n\n\n:::\n:::\n\n\n\nWe can see now that quite a number of columns have missing values, and that each column has exactly 136 missing data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrows_missing <- ship_performance %>%\n  distinct() %>%\n  filter(rowSums(is.na(.)) > 0) %>%\n  nrow()\n\ncat(\"Percentage of rows with missing values:\", (rows_missing / nrow(ship_performance)) * 100, \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPercentage of rows with missing values: 22.25877 %\n```\n\n\n:::\n:::\n\n\n\nSince the percentage of rows with missing values is high, istead of dropping rows and missing critical data, we will \n\n### Analyse the structure of the dataset\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(ship_performance)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [2,736 × 18] (S3: tbl_df/tbl/data.frame)\n $ Date                   : Date[1:2736], format: \"2023-06-04\" \"2023-06-11\" ...\n $ Ship_Type              : chr [1:2736] \"Container Ship\" \"Fish Carrier\" \"Container Ship\" \"Bulk Carrier\" ...\n $ Route_Type             : chr [1:2736] NA \"Short-haul\" \"Long-haul\" \"Transoceanic\" ...\n $ Engine_Type            : chr [1:2736] \"Heavy Fuel Oil (HFO)\" \"Steam Turbine\" \"Diesel\" \"Steam Turbine\" ...\n $ Maintenance_Status     : chr [1:2736] \"Critical\" \"Good\" \"Fair\" \"Fair\" ...\n $ Speed_Over_Ground_knots: num [1:2736] 12.6 10.4 20.7 21.1 13.7 ...\n $ Engine_Power_kW        : num [1:2736] 2063 1796 1649 915 1090 ...\n $ Distance_Traveled_nm   : num [1:2736] 1031 1060 659 1127 1445 ...\n $ Draft_meters           : num [1:2736] 14.13 14.65 7.2 11.79 9.73 ...\n $ Weather_Condition      : chr [1:2736] \"Moderate\" \"Rough\" \"Moderate\" \"Moderate\" ...\n $ Cargo_Weight_tons      : num [1:2736] 1959 162 178 1737 261 ...\n $ Operational_Cost_USD   : num [1:2736] 483832 483388 448543 261350 287718 ...\n $ Revenue_per_Voyage_USD : num [1:2736] 292183 883766 394019 87551 676121 ...\n $ Turnaround_Time_hours  : num [1:2736] 25.9 63.2 49.4 22.4 64.2 ...\n $ Efficiency_nm_per_kWh  : num [1:2736] 1.455 0.29 0.5 0.703 1.331 ...\n $ Seasonal_Impact_Score  : num [1:2736] 1.416 0.886 1.406 1.371 0.583 ...\n $ Weekly_Voyage_Count    : num [1:2736] 1 6 9 1 8 7 3 6 8 2 ...\n $ Average_Load_Percentage: num [1:2736] 93.8 93.9 96.2 66.2 80 ...\n```\n\n\n:::\n:::\n\n\n\nThere are now XXXXXX rows and still 18 columns.\n\nWe will convert the Date column to Date data type for better extraction of time and seasonlity related features \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_performance$Date <- as.Date(ship_performance$Date, format=\"%Y-%m-%d\")\n```\n:::\n\n\n\n\n### Extract summary statistics\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ship_performance)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Date             Ship_Type          Route_Type        Engine_Type       \n Min.   :2023-06-04   Length:2736        Length:2736        Length:2736       \n 1st Qu.:2023-09-10   Class :character   Class :character   Class :character  \n Median :2023-12-17   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2023-12-17                                                           \n 3rd Qu.:2024-03-24                                                           \n Max.   :2024-06-30                                                           \n Maintenance_Status Speed_Over_Ground_knots Engine_Power_kW\n Length:2736        Min.   :10.01           Min.   : 501   \n Class :character   1st Qu.:13.93           1st Qu.:1148   \n Mode  :character   Median :17.71           Median :1757   \n                    Mean   :17.60           Mean   :1758   \n                    3rd Qu.:21.28           3rd Qu.:2383   \n                    Max.   :25.00           Max.   :2999   \n Distance_Traveled_nm  Draft_meters    Weather_Condition  Cargo_Weight_tons\n Min.   :  50.43      Min.   : 5.002   Length:2736        Min.   :  50.23  \n 1st Qu.: 548.51      1st Qu.: 7.437   Class :character   1st Qu.: 553.98  \n Median :1037.82      Median : 9.919   Mode  :character   Median :1043.21  \n Mean   :1036.41      Mean   : 9.929                      Mean   :1032.57  \n 3rd Qu.:1540.93      3rd Qu.:12.413                      3rd Qu.:1527.72  \n Max.   :1998.34      Max.   :14.993                      Max.   :1999.13  \n Operational_Cost_USD Revenue_per_Voyage_USD Turnaround_Time_hours\n Min.   : 10092       Min.   : 50352         Min.   :12.02        \n 1st Qu.:131293       1st Qu.:290346         1st Qu.:26.17        \n Median :257158       Median :520177         Median :41.59        \n Mean   :255143       Mean   :521362         Mean   :41.75        \n 3rd Qu.:381797       3rd Qu.:750073         3rd Qu.:57.36        \n Max.   :499735       Max.   :999917         Max.   :71.97        \n Efficiency_nm_per_kWh Seasonal_Impact_Score Weekly_Voyage_Count\n Min.   :0.1002        Min.   :0.500         Min.   :1.000      \n 1st Qu.:0.4636        1st Qu.:0.758         1st Qu.:3.000      \n Median :0.7899        Median :1.009         Median :5.000      \n Mean   :0.7987        Mean   :1.004         Mean   :4.915      \n 3rd Qu.:1.1474        3rd Qu.:1.253         3rd Qu.:7.000      \n Max.   :1.4993        Max.   :1.499         Max.   :9.000      \n Average_Load_Percentage\n Min.   : 50.01         \n 1st Qu.: 62.70         \n Median : 75.50         \n Mean   : 75.22         \n 3rd Qu.: 87.72         \n Max.   :100.00         \n```\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}