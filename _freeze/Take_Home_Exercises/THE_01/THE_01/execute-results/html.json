{
  "hash": "b082978382855e340b9e85880d926b2b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 01: Insights in Shipping Data\"\nauthor: \"Yee Jun Yit\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## Overview\n\nThe maritime sector a critical component of global trade, contributing significantly to increasing standards of living around the world, and requiring sustainability in this changing economic climate. Understanding ship performance, fuel efficiency, and operational cost factors are essential for improving decision-making and minimizing environmental impact.\n\n## Loading Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(SmartEDA, plotly, ggstatsplot, treemap, tidyverse)\n```\n:::\n\n\n\n\nWe will be using the Ship Performance Dataset, which is synthetic data generated to realistically represent key operational metrics and attributes of different ship types in the Gulf of Guinea in Africa. This will enable us to perform maritime data analytics for clustering, prediction, and optimization of the industry.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_performance <- read_csv(\"data/Ship_Performance_Dataset.csv\")\n```\n:::\n\n\nThe dataset consists of 2736 rows and 18 columns, with features split into numerical and categorical types.\n\n## EDA and Visualisations\n\nWe first perform some exploratory data analysis to better understand what we are working with.\n\n### View the first few rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ship_performance)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 18\n  Date       Ship_Type      Route_Type   Engine_Type          Maintenance_Status\n  <date>     <chr>          <chr>        <chr>                <chr>             \n1 2023-06-04 Container Ship None         Heavy Fuel Oil (HFO) Critical          \n2 2023-06-11 Fish Carrier   Short-haul   Steam Turbine        Good              \n3 2023-06-18 Container Ship Long-haul    Diesel               Fair              \n4 2023-06-25 Bulk Carrier   Transoceanic Steam Turbine        Fair              \n5 2023-07-02 Fish Carrier   Transoceanic Diesel               Fair              \n6 2023-07-09 Fish Carrier   Long-haul    Heavy Fuel Oil (HFO) Fair              \n# ℹ 13 more variables: Speed_Over_Ground_knots <dbl>, Engine_Power_kW <dbl>,\n#   Distance_Traveled_nm <dbl>, Draft_meters <dbl>, Weather_Condition <chr>,\n#   Cargo_Weight_tons <dbl>, Operational_Cost_USD <dbl>,\n#   Revenue_per_Voyage_USD <dbl>, Turnaround_Time_hours <dbl>,\n#   Efficiency_nm_per_kWh <dbl>, Seasonal_Impact_Score <dbl>,\n#   Weekly_Voyage_Count <dbl>, Average_Load_Percentage <dbl>\n```\n\n\n:::\n:::\n\n\n### Check for duplicated and missing values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(duplicated(ship_performance))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\nThere are no duplicated rows\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(ship_performance))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Date               Ship_Type              Route_Type \n                      0                       0                       0 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                      0                       0                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                      0                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n```\n\n\n:::\n:::\n\n\nAccording to the above code chunk, all the columns have 0 missing values, but visual inspection of the first 5 rows reveal the existence of missing-like values such as \"None\". This suggests that those missing values are not being recognized as NA.\n\nWe will change the  missing values in categorical columns to NA and recheck for missing values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_performance <- ship_performance %>%\n  mutate(across(where(is.character), ~na_if(.x, \"None\")))\n\ncolSums(is.na(ship_performance))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Date               Ship_Type              Route_Type \n                      0                     136                     136 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                    136                     136                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                    136                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n```\n\n\n:::\n:::\n\n\nWe can see now that four columns \"Ship_Type\", \"Route_Type\", \"Engine_Type\", \"Maintenance_Status\" have missing values, and that each column has exactly 136 missing data. We check how many unique rows contain missing values:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrows_missing <- ship_performance %>%\n  distinct() %>%\n  filter(rowSums(is.na(.)) > 0) %>%\n  nrow()\n\ncat(\"Percentage of rows with missing values:\", (rows_missing / nrow(ship_performance)) * 100, \"%\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPercentage of rows with missing values: 22.25877 %\n```\n\n\n:::\n:::\n\n\nSince the percentage of rows with missing values is high, instead of dropping rows and missing critical data, we will inpute data based on the distribution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(42)  # Ensure reproducibility\n\n# Function to impute categorical columns based on their frequency distribution\nimpute_categorical <- function(column) {\n  missing_indices <- which(is.na(column))\n  if (length(missing_indices) > 0) {\n    column[missing_indices] <- sample(column[!is.na(column)], \n                                      length(missing_indices), replace = TRUE)\n  }\n  return(column)\n}\n\n# Apply to all categorical columns (where data type is character)\nship_performance_imputed <- ship_performance %>%\n  mutate(across(where(is.character), impute_categorical))\n```\n:::\n\n\n\nWe can check whether the distribution of data before and after imputation is the same visually, first by extracting the relevant data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get categorical column names\ncategorical_columns <- names(ship_performance)[sapply(ship_performance, is.character)]\n\n# Function to get the distribution of data \nget_percent_distribution <- function(data, column) {\n  freq_table <- table(data[[column]], useNA = \"no\")\n  freq_df <- as.data.frame(freq_table, responseName = \"Count\") %>%\n    mutate(\n      Percent = Count / sum(Count) * 100,\n      Variable = column\n    )\n  \n  # Rename the classes and reorder the data.frame\n  colnames(freq_df)[1] <- \"Classes\"\n  \n  return(freq_df)\n}\n\ndistributions_before <- lapply(categorical_columns, function(col) {\n  freq_df <- get_percent_distribution(ship_performance, col)\n  freq_df$Status <- \"Before Imputation\"\n  freq_df\n}) %>% bind_rows()\n\n# Get distributions after imputation\ndistributions_after <- lapply(categorical_columns, function(col) {\n  freq_df <- get_percent_distribution(ship_performance_imputed, col)\n  freq_df$Status <- \"After Imputation\"\n  freq_df\n}) %>% bind_rows()\n\ndistributions_combined <- bind_rows(distributions_before, distributions_after)\n```\n:::\n\n\n\nWe then plot the distribution of the missing categorical data after and before it has been imputed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(distributions_combined, aes(x = Classes, y = Percent, fill = Status)) +\n  geom_col(position = \"dodge\") +\n  facet_wrap(~ Variable, scales = \"free_x\") +  # separate plot for each categorical column\n  theme_minimal(base_size = 13) +\n  labs(\n    title = \"Comparison of Categorical Distributions Before and After Imputation\",\n    x = \"Variable\",\n    y = \"Percentage\"\n  ) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1)  # tilt x-axis labels if needed\n  ) +\n  scale_fill_manual(values = c(\"Before Imputation\" = \"Red\", \n                               \"After Imputation\"  = \"Blue\"))\n```\n\n::: {.cell-output-display}\n![](THE_01_files/figure-html/unnamed-chunk-10-1.png){width=1152}\n:::\n:::\n\n\n\n::: {.callout-note}\n### Explanation\nThe bar graph illustrates how several categorical variables \"Engine_Type\", \"Maintenance_Status\", \"Route_Type\", \"Ship_Type\", and \"Weather_Condition\" are distributed before and after the imputation of missing data. We can see that the proportions of each category remain largely consistent, indicating that the chosen imputation method did not introduce noticeable bias or distort the original distribution, and is stable. This stability suggests that the imputation process preserved the core structure of the dataset. Consequently, subsequent analyses that rely on these categorical variables can be expected to yield reliable results as the approach to handling missing values maintained the representativeness of the underlying categorical features.\n:::\n\n### Analyse the structure of the dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_performance_imputed %>%\n  ExpData(type = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Index           Variable_Name Variable_Type Sample_n Missing_Count\n1      1                    Date          Date     2736             0\n2      2               Ship_Type     character     2736             0\n3      3              Route_Type     character     2736             0\n4      4             Engine_Type     character     2736             0\n5      5      Maintenance_Status     character     2736             0\n6      6 Speed_Over_Ground_knots       numeric     2736             0\n7      7         Engine_Power_kW       numeric     2736             0\n8      8    Distance_Traveled_nm       numeric     2736             0\n9      9            Draft_meters       numeric     2736             0\n10    10       Weather_Condition     character     2736             0\n11    11       Cargo_Weight_tons       numeric     2736             0\n12    12    Operational_Cost_USD       numeric     2736             0\n13    13  Revenue_per_Voyage_USD       numeric     2736             0\n14    14   Turnaround_Time_hours       numeric     2736             0\n15    15   Efficiency_nm_per_kWh       numeric     2736             0\n16    16   Seasonal_Impact_Score       numeric     2736             0\n17    17     Weekly_Voyage_Count       numeric     2736             0\n18    18 Average_Load_Percentage       numeric     2736             0\n   Per_of_Missing No_of_distinct_values\n1               0                    57\n2               0                     4\n3               0                     4\n4               0                     3\n5               0                     3\n6               0                  2736\n7               0                  2736\n8               0                  2736\n9               0                  2736\n10              0                     3\n11              0                  2736\n12              0                  2736\n13              0                  2736\n14              0                  2736\n15              0                  2736\n16              0                  2736\n17              0                     9\n18              0                  2736\n```\n\n\n:::\n:::\n\n\nThe categorical features consist of the following:\n\n-  *Ship_Type*: Type of ship (e.g., Tanker, Container Ship, Fish Carrier, Bulk Carrier).\n-  *Route_Type*: Shipping route type (e.g., Short-haul, Long-haul, Transoceanic).\n-  *Engine_Type*: Type of engine (e.g., Diesel, Heavy Fuel Oil).\n-  *Maintenance_Status*: Maintenance condition of the ship (e.g., Fair, Critical, Good).\n-  *Weather_Condition*: Prevailing weather conditions during voyages (e.g., Calm, Moderate, Rough).\n\nThe numerical features are highlighted by the following:\n\n-  *Speed_Over_Ground_knots*: Average speed of the ship over water (in knots).\n-  *Engine_Power_kW*: Engine power output (in kilowatts).\n-  *Distance_Traveled_nm*: Total distance traveled by the ship (in nautical miles).\n-  *Operational_Cost_USD*: Total operational cost per voyage (in USD).\n-  *Revenue_per_Voyage_USD*: Revenue generated per voyage (in USD).\n-  *Efficiency_nm_per_kWh*: Energy efficiency calculated in nautical miles per kilowatt-hour.\n\nWe will drop the column \"Seasonal_Impact_Score\" as it has no context and we can't understand what the numbers represent.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_performance_imputed <- ship_performance_imputed %>%\n  select(-Seasonal_Impact_Score)\n```\n:::\n\n\n\n\n### Extract summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ship_performance_imputed)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Date             Ship_Type          Route_Type        Engine_Type       \n Min.   :2023-06-04   Length:2736        Length:2736        Length:2736       \n 1st Qu.:2023-09-10   Class :character   Class :character   Class :character  \n Median :2023-12-17   Mode  :character   Mode  :character   Mode  :character  \n Mean   :2023-12-17                                                           \n 3rd Qu.:2024-03-24                                                           \n Max.   :2024-06-30                                                           \n Maintenance_Status Speed_Over_Ground_knots Engine_Power_kW\n Length:2736        Min.   :10.01           Min.   : 501   \n Class :character   1st Qu.:13.93           1st Qu.:1148   \n Mode  :character   Median :17.71           Median :1757   \n                    Mean   :17.60           Mean   :1758   \n                    3rd Qu.:21.28           3rd Qu.:2383   \n                    Max.   :25.00           Max.   :2999   \n Distance_Traveled_nm  Draft_meters    Weather_Condition  Cargo_Weight_tons\n Min.   :  50.43      Min.   : 5.002   Length:2736        Min.   :  50.23  \n 1st Qu.: 548.51      1st Qu.: 7.437   Class :character   1st Qu.: 553.98  \n Median :1037.82      Median : 9.919   Mode  :character   Median :1043.21  \n Mean   :1036.41      Mean   : 9.929                      Mean   :1032.57  \n 3rd Qu.:1540.93      3rd Qu.:12.413                      3rd Qu.:1527.72  \n Max.   :1998.34      Max.   :14.993                      Max.   :1999.13  \n Operational_Cost_USD Revenue_per_Voyage_USD Turnaround_Time_hours\n Min.   : 10092       Min.   : 50352         Min.   :12.02        \n 1st Qu.:131293       1st Qu.:290346         1st Qu.:26.17        \n Median :257158       Median :520177         Median :41.59        \n Mean   :255143       Mean   :521362         Mean   :41.75        \n 3rd Qu.:381797       3rd Qu.:750073         3rd Qu.:57.36        \n Max.   :499735       Max.   :999917         Max.   :71.97        \n Efficiency_nm_per_kWh Weekly_Voyage_Count Average_Load_Percentage\n Min.   :0.1002        Min.   :1.000       Min.   : 50.01         \n 1st Qu.:0.4636        1st Qu.:3.000       1st Qu.: 62.70         \n Median :0.7899        Median :5.000       Median : 75.50         \n Mean   :0.7987        Mean   :4.915       Mean   : 75.22         \n 3rd Qu.:1.1474        3rd Qu.:7.000       3rd Qu.: 87.72         \n Max.   :1.4993        Max.   :9.000       Max.   :100.00         \n```\n\n\n:::\n:::\n\n\n## Data Exploration\n\n### Correlation of Numerical Variables\n\nWe start with using `ggcorrmat()` of **ggstatsplot** package to visualise a correlation matrix for our data exploration. This function computes pairwise correlation coefficients and their corresponding p-values, displaying them in a heatmap-style plot. The graphical output makes it easy to spot which pairs of variables have strong positive or negative relationships, as well as which variables are largely uncorrelated. This initial overview helps us identify potential multi-collinearity problems and guides us toward which variables may be most influential in downstream analyses or predictive models.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcorrmat(\n  data = ship_performance_imputed, \n  cor.vars = 6:17,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 7),\n  title    = \"Correlogram for ship performance dataset\"\n)\n```\n\n::: {.cell-output-display}\n![](THE_01_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note}\n### Explanation\n\nAll correlations appear statistically nonsignificant (marked with “X”), indicating that these variables may not share strong linear associations. The color scale is from gold to green, but the matrix is all coloured in white. Overall, the distribution of modest correlations suggests that the chosen metrics operate independently. Given the presence of these nonsignificant results, deeper analysis might consider nonlinear patterns or variables not reflected here. In particular, identifying the operational drivers of efficiency and profitability could benefit from more detailed modeling or domain-specific insights. Nonetheless, this initial overview highlights areas where further study may prove most valuable.\n:::\n\nWe confirm this by creating scatterplots for a few key pairs of variables. For instance, plotting \"Cargo_Weight_tons\" against \"Revenue_per_Voyage_USD\" visually examines whether heavier shipments indeed correlate with higher earnings, as one might expect. The resulting plot can reveal outliers or nonlinear patterns that are missed by simple correlation coefficients. By repeating this approach with other relevant variables, such as Operational_Cost_USD or Turnaround_Time_hours, we gain a clearer picture to guide us toward more targeted modeling.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(ship_performance_imputed, aes(x = Cargo_Weight_tons, y = Revenue_per_Voyage_USD)) +\n  geom_point(alpha = 0.5, color = \"red\") +\n  geom_smooth(method = \"lm\", color = \"blue\") +\n  labs(title = \"Cargo Weight vs Revenue\", x = \"Cargo Weight (tons)\", y = \"Revenue per Voyage (USD)\")\n\np2 <- ggplot(ship_performance_imputed, aes(x = Draft_meters, y = Efficiency_nm_per_kWh)) +\n  geom_point(alpha = 0.5, color = \"brown\") +\n  geom_smooth(method = \"lm\", color = \"black\") +\n  labs(title = \"Draft vs Efficiency\", x = \"Draft (meters)\", y = \"Efficiency (nm/kWh)\")\n\np3 <- ggplot(ship_performance_imputed, aes(x = Engine_Power_kW, y = Speed_Over_Ground_knots)) +\n  geom_point(alpha = 0.5, color = \"grey40\") +\n  geom_smooth(method = \"lm\", color = \"purple\") +\n  labs(title = \"Engine Power vs Speed\", x = \"Engine Power (kW)\", y = \"Speed Over Ground (knots)\")\n\np4 <- ggplot(ship_performance_imputed, aes(x = Turnaround_Time_hours, y = Weekly_Voyage_Count)) +\n  geom_point(alpha = 0.5, color = \"green\") +\n  labs(title = \"Turnaround Time vs No. of Voyages\", x = \"Turnaround Time (hours)\", y = \"Weekly Voyage Count\")\n\n(p1 + p2) / (p3 + p4)\n```\n\n::: {.cell-output-display}\n![](THE_01_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n::: {.callout-note}\n### Explanation\nThe color points in the plots above each highlight a data observation, while the straight line depicts a linear regression fit to giving a quick read on trend direction and any outliers that may exist. The near‐horizontal lines in these examples confirm that the variables are not correlated, or at least that any relationship is not linear. Future steps would involve drilling down into each individual relationship to confirm whether certain ranges of values display different patterns, or if additional variables might moderate the relationship.\n:::\n\n### Categorical Data\n\nWe try to visualise the effect of \"Weather\" and Maintenance Status\", which are categorical varaibles, on \"Revenue\" and \"Turnaround Time\" respectively. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np5 <- ggplot(ship_performance_imputed, aes(x = Weather_Condition, \n               y = Revenue_per_Voyage_USD, \n               fill = Maintenance_Status)) +\n  geom_boxplot() +\n  labs(\n    title = \"Revenue by Weather and Maintenance Status\",\n    x = \"Weather Condition\",\n    y = \"Revenue per Voyage (USD)\",\n    fill = \"Maintenance Status\"\n  ) +\n  theme_minimal()\n\np6 <- ggplot(ship_performance_imputed, aes(x = Weather_Condition, \n               y = Turnaround_Time_hours, \n               fill = Maintenance_Status)) +\n  geom_boxplot() +\n  labs(\n    title = \"Turnaround Time by Weather and Maintenance Status\",\n    x = \"Weather Condition\",\n    y = \"Turnaround Time (hours)\",\n    fill = \"Maintenance Status\"\n  ) +\n  theme_minimal()\n\np5 / p6\n```\n\n::: {.cell-output-display}\n![](THE_01_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note}\n### Explanation\nIn these boxplots, we can see that revenue and turnaround time vary slightly across different weather conditions (calm, moderate, and rough) and maintenance statuses (critical, fair, and good). However, the overall differences appear relatively minor, suggesting that neither weather nor maintenance category dramatically influences performance. Although there are some small shifts in median revenue when comparing, for instance, “critical” vessels under rough conditions or “good” vessels under moderate conditions, these changes are not especially pronounced. Similarly, turnaround times show only modest variations across categories, with some slight increases under rough weather and critical maintenance status, yet these do not seem substantial. We can see no major outliers or clear patterns of drastically higher or lower values for specific categories. Overall, the patterns suggest that any differences in revenue or turnaround time are not particularly significant. No notable impact on operations is detected.\n:::\n\n### Treemaps\n\nWe use a treemap to visualize hierarchical data—making it easier to spot patterns and relationships across multiple categorical dimensions at a glance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(ship_performance_imputed,\n        index = c(\"Ship_Type\", \"Route_Type\", \"Weather_Condition\"),  # Hierarchy\n        vSize = \"Revenue_per_Voyage_USD\",                           # Rectangle size\n        vColor = \"Turnaround_Time_hours\",                           # Rectangle color\n        type = \"value\",\n        title = \"Treemap of Ship Data by Ship Type, Route Type, and Weather Condition\",\n        title.legend = \"Turnaround Time (hours)\"\n)\n```\n\n::: {.cell-output-display}\n![](THE_01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note}\n### Explanation\nThis treemap is divided by \"Ship_Type\", then \"Route_Type\", and finally by \"Weather_Condition.\" Each category is represented as a rectangle whose area is proportional to total revenue (Revenue_per_Voyage_USD). The color of each rectangle corresponds to Turnaround_Time_hours.\n\nThe results indicate that Container Ships on coastal routes under calm weather generate high revenue, while Bulk Carriers operating long-haul in rough conditions exhibit extended turnaround times surpassing 3,000 hours. Meanwhile, shorter routes in moderate weather generally show moderate earnings but efficient turnaround below 2,000 hours. These findings highlight potential operational optimizations, such as focusing on  schedules for ships frequently exposed to adverse conditions, improving efficiency in the port.\n:::\n\n### Time Series\n\nWe plot a time series to view any possible seasonality.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- ship_performance_imputed %>%\n  group_by(Date, Weather_Condition) %>%\n  summarize(Count = n(), .groups = 'drop')\n\n# Line plot of weather counts over time\nggplot(weather, aes(x = Date, y = Count, color = Weather_Condition)) +\n  geom_line() +\n  labs(\n    title = \"Frequency of Weather Conditions Over Months\",\n    x = \"Date\",\n    y = \"Count of Observations\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](THE_01_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note}\n### Explanation\nThere’s no obvious, repeating cycle that clearly indicates classic seasonality in the weather.\n::: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nTAT_weather <- ship_performance_imputed %>%\n  group_by(Date, Weather_Condition) %>%\n  summarize(Mean_TAT = mean(Turnaround_Time_hours), .groups = 'drop')\n\n# 3. Plot the time series\nggplot(TAT_weather, aes(x = Date, \n                   y = Mean_TAT, \n                   color = Weather_Condition)) +\n  geom_line() + \n  labs(\n    title = \"Mean Turnaround Time Over Date, by Weather Condition\",\n    x = \"Date\",\n    y = \"Turnaround Time (hours)\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](THE_01_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n::: {.callout-note}\n### Explanation\nThe lines appear irregular and interwoven, showing no clear or repeating patterns (e.g., no predictable peaks and troughs at regular intervals). We therefore can’t conclude any strong seasonality or distinct trend in turnaround times by weather condition solely from this time-series plot\n::: \n\n## Conclusion\n\nOverall, our exploratory data analysis suggests that the dataset does not exhibit many clear, strong patterns or obvious cycles. Variables like turnaround time, speed, and efficiency show substantial variability without forming distinct trends. Even time-series plots by weather condition indicate no persistent cyclical behavior.\n\nThe treemap provides preliminary insights—like the high revenue of Container Ships on calm-weather coastal routes and the lengthy turnaround times of Bulk Carriers in rough conditions—yet these observations warrant deeper investigation. Additional data, such as detailed cost structures or refined weather metrics, would help validate and expand upon these findings, enabling more targeted strategies to optimize scheduling and improve operational efficiency.",
    "supporting": [
      "THE_01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}