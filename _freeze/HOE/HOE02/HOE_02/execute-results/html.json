{
  "hash": "520e210b791104ff598ea2d7bff53a27",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands on Exercise 02: Beyond ggplot2 Fundamentals \"\nauthor: \"Yee Jun Yit\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## Introduction\n\nIn this document, we explore several ggplot2 extensions for creating elegant and effective statistical graphics.\n\nBesides tidyverse, we will use 4 additional R packages:\n\n-   ggrepel: an R package that provides geoms for ggplot2 to repel overlapping text labels.\n\n-   ggthemes: an R package that provides some extra themes, geoms, and scales for ‘ggplot2’.\n\n-   hrbrthemes: an R package that provides typography-centric themes and theme components for ggplot2.\n\n-    patchwork: an R package for compositing figures created using ggplot2.\n\n## Loading Data\n\nInstall and load packages and libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)\n```\n:::\n\n\n\nRead data file\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data = read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n\n## Beyond ggplot2 Annotation: ggrepel\n\nggrepel is an extension of ggplot2 which provides `geoms` for ggplot2 to repel overlapping text. This has to do with annotations on a large number of data points in a statistical graph.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nAs can be seen the ID labels are very messy and don't provide visual information.\n\n### Using ggrepel\n\nWe fix this by replacing `geom_label()` with `geom_label_repel()`, and `geom_text()` with `geom_text_repel()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nThis eliminates overlapping labels, improving the clarity of our visualizations.\n\n## Beyond ggplot2 themes\n\nggplot2 comes with eight built-in themes: `theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()`, and `theme_void()`.\n\nAn example: `theme_light()` is shown below\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey90\") +\n  theme_light() +\n  ggtitle(\"Distribution of Maths scores\")\n```\n\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### Working with ggthemes\n\nggthemes provides themes with geoms and scales that replicate the look of visualisations by renowned publications e.g. `theme_economist()`, `theme_excel()`, `theme_calc()`, `theme_igray()`, `theme_wsj()`, `theme_stata()`, `theme_solarized()`, `theme_fivethirtyeight()` e.t.c.\n\nThe example below uses *The Economist*'s theme\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n```\n\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### Working with hrbthemes\n\nThis packages provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\n::: panel-tabset\n#### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n#### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n```\n:::\n\n\n:::\n\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. With a few additional arguments, we can make quick emphasis during a production workflow environment.\n\n::: panel-tabset\n#### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n#### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n```\n:::\n\n\n:::\n\nIn the above, we used the `axis_title_size` argument to increase the font size of the axis title to 18, `base_size argument` to increase the default axis label font size to 15, and`grid argument` to display only the y-axis grid lines.\n\n## Beyond a Single Graph\n\nMultiple graphs are normally required to tell a compelling visual story, and several ggplot2 extensions provide functions to compose figure with multiple graphs. Before we combine multiple graphs to create a composite plot, let us look at three individual graphs on their own.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme(plot.title = element_text(size=10))\n```\n:::\n\n\n:::\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\") +\n  theme(plot.title = element_text(size=10))\n```\n:::\n\n\n:::\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point(size=1) +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\") +\n  theme(plot.title = element_text(size=9))\n```\n:::\n\n\n:::\n\n### Creating Composite Graphics: patchwork methods\n\nSeveral ggplot2 extension packages support the compositing of graphs, such as gridExtra package's `grid.arrange()` and cowplot package's `plot_grid()`. Here, we shall work with the **patchwork** package, which is specially designed for combining separate ggplot2 graphs into a single figure.\n\npatchwork has a very simple syntax to create composite layouts easily. It uses a combination of:\n\n-  plus sign + to create a two-column layout\n\n-  parenthesis () to create a subplot group\n-  division sign / to create a two-row layout\n\n### Combining two ggplot2 graphs\n\nThe two histograms we saw indiivudally earlier will be combined using the simple addition of a + sign, as below\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2\n```\n\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n### Combining three ggplot2 graphs\n\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n-  “/” operator to stack two ggplot2 graphs on top of each other,\n-  “\\|” operator to place plots beside each other,\n-  “()” operator the define the sequence of the plotting.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(p1 / p2) | p3\n```\n\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n### Creating composite pictures with tags\n\n**patchwork** also provides auto-tagging capabilities to identify subplots, as shown in the figure below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n```\n\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n### Creating picture inlays \n\nBesides providing functions to place plots next to each other, **patchwork** allows us to place one or several plots elements freely on top or below another plot with the `inset_element()` function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n```\n\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n### Creating a composite figure with theme\n\nWe now combine patchwork with ggthemes for appealing visuals.\n\n:::{.panel-tabset}\n\n#### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](HOE_02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n#### The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist() & theme(plot.title = element_text(size = 8))\n```\n:::\n\n\n:::\n\n## References\n\n-   [Patchwork R package goes nerd viral](https://www.littlemissdata.com/blog/patchwork)\n\n-   [ggrepel](https://ggrepel.slowkow.com/)\n\n-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html)\n\n-   [hrbrthemes](https://r-graph-gallery.com/package/hrbrthemes.html)\n\n-   [ggplot tips: Arranging plots](https://albert-rapp.de/posts/ggplot2-tips/04_arranging_plots/04_arranging_plots)\n\n-   [ggplot2 Theme Elements Demonstration](https://henrywang.nl/ggplot2-theme-elements-demonstration/)\n\n-   [ggplot2 Theme Elements Reference Sheet](https://isabella-b.com/blog/ggplot2-theme-elements-reference/)\n",
    "supporting": [
      "HOE_02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}